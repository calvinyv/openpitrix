// Code generated by protoc-gen-go. DO NOT EDIT.
// source: runtime.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf2 "github.com/golang/protobuf/ptypes/wrappers"
import google_protobuf3 "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RuntimeLabel struct {
	RuntimeLabelId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=runtime_label_id,json=runtimeLabelId" json:"runtime_label_id,omitempty"`
	RuntimeId      *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=runtime_id,json=runtimeId" json:"runtime_id,omitempty"`
	LabelKey       *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=label_key,json=labelKey" json:"label_key,omitempty"`
	LabelValue     *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=label_value,json=labelValue" json:"label_value,omitempty"`
	CreateTime     *google_protobuf3.Timestamp   `protobuf:"bytes,5,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
}

func (m *RuntimeLabel) Reset()                    { *m = RuntimeLabel{} }
func (m *RuntimeLabel) String() string            { return proto.CompactTextString(m) }
func (*RuntimeLabel) ProtoMessage()               {}
func (*RuntimeLabel) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *RuntimeLabel) GetRuntimeLabelId() *google_protobuf2.StringValue {
	if m != nil {
		return m.RuntimeLabelId
	}
	return nil
}

func (m *RuntimeLabel) GetRuntimeId() *google_protobuf2.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *RuntimeLabel) GetLabelKey() *google_protobuf2.StringValue {
	if m != nil {
		return m.LabelKey
	}
	return nil
}

func (m *RuntimeLabel) GetLabelValue() *google_protobuf2.StringValue {
	if m != nil {
		return m.LabelValue
	}
	return nil
}

func (m *RuntimeLabel) GetCreateTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

type Runtime struct {
	RuntimeId         *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId" json:"runtime_id,omitempty"`
	Name              *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description       *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Provider          *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=provider" json:"provider,omitempty"`
	RuntimeUrl        *google_protobuf2.StringValue `protobuf:"bytes,5,opt,name=runtime_url,json=runtimeUrl" json:"runtime_url,omitempty"`
	Zone              *google_protobuf2.StringValue `protobuf:"bytes,6,opt,name=zone" json:"zone,omitempty"`
	RuntimeCredential *google_protobuf2.StringValue `protobuf:"bytes,7,opt,name=runtime_credential,json=runtimeCredential" json:"runtime_credential,omitempty"`
	Labels            []*RuntimeLabel               `protobuf:"bytes,8,rep,name=labels" json:"labels,omitempty"`
	Owner             *google_protobuf2.StringValue `protobuf:"bytes,9,opt,name=owner" json:"owner,omitempty"`
	Status            *google_protobuf2.StringValue `protobuf:"bytes,10,opt,name=status" json:"status,omitempty"`
	CreateTime        *google_protobuf3.Timestamp   `protobuf:"bytes,11,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime        *google_protobuf3.Timestamp   `protobuf:"bytes,12,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *Runtime) Reset()                    { *m = Runtime{} }
func (m *Runtime) String() string            { return proto.CompactTextString(m) }
func (*Runtime) ProtoMessage()               {}
func (*Runtime) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *Runtime) GetRuntimeId() *google_protobuf2.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *Runtime) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Runtime) GetDescription() *google_protobuf2.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Runtime) GetProvider() *google_protobuf2.StringValue {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *Runtime) GetRuntimeUrl() *google_protobuf2.StringValue {
	if m != nil {
		return m.RuntimeUrl
	}
	return nil
}

func (m *Runtime) GetZone() *google_protobuf2.StringValue {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *Runtime) GetRuntimeCredential() *google_protobuf2.StringValue {
	if m != nil {
		return m.RuntimeCredential
	}
	return nil
}

func (m *Runtime) GetLabels() []*RuntimeLabel {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Runtime) GetOwner() *google_protobuf2.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Runtime) GetStatus() *google_protobuf2.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Runtime) GetCreateTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Runtime) GetStatusTime() *google_protobuf3.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type CreateRuntimeRequest struct {
	Name              *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description       *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Provider          *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=provider" json:"provider,omitempty"`
	RuntimeUrl        *google_protobuf2.StringValue `protobuf:"bytes,5,opt,name=runtime_url,json=runtimeUrl" json:"runtime_url,omitempty"`
	Zone              *google_protobuf2.StringValue `protobuf:"bytes,6,opt,name=zone" json:"zone,omitempty"`
	RuntimeCredential *google_protobuf2.StringValue `protobuf:"bytes,7,opt,name=runtime_credential,json=runtimeCredential" json:"runtime_credential,omitempty"`
	Labels            *google_protobuf2.StringValue `protobuf:"bytes,8,opt,name=labels" json:"labels,omitempty"`
}

func (m *CreateRuntimeRequest) Reset()                    { *m = CreateRuntimeRequest{} }
func (m *CreateRuntimeRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRuntimeRequest) ProtoMessage()               {}
func (*CreateRuntimeRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *CreateRuntimeRequest) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CreateRuntimeRequest) GetDescription() *google_protobuf2.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *CreateRuntimeRequest) GetProvider() *google_protobuf2.StringValue {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *CreateRuntimeRequest) GetRuntimeUrl() *google_protobuf2.StringValue {
	if m != nil {
		return m.RuntimeUrl
	}
	return nil
}

func (m *CreateRuntimeRequest) GetZone() *google_protobuf2.StringValue {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *CreateRuntimeRequest) GetRuntimeCredential() *google_protobuf2.StringValue {
	if m != nil {
		return m.RuntimeCredential
	}
	return nil
}

func (m *CreateRuntimeRequest) GetLabels() *google_protobuf2.StringValue {
	if m != nil {
		return m.Labels
	}
	return nil
}

type CreateRuntimeResponse struct {
	Runtime *Runtime `protobuf:"bytes,1,opt,name=runtime" json:"runtime,omitempty"`
}

func (m *CreateRuntimeResponse) Reset()                    { *m = CreateRuntimeResponse{} }
func (m *CreateRuntimeResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateRuntimeResponse) ProtoMessage()               {}
func (*CreateRuntimeResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *CreateRuntimeResponse) GetRuntime() *Runtime {
	if m != nil {
		return m.Runtime
	}
	return nil
}

type DescribeRuntimesRequest struct {
	RuntimeId  []string                      `protobuf:"bytes,1,rep,name=runtime_id,json=runtimeId" json:"runtime_id,omitempty"`
	Status     []string                      `protobuf:"bytes,2,rep,name=status" json:"status,omitempty"`
	SearchWord *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=search_word,json=searchWord" json:"search_word,omitempty"`
	Label      *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=label" json:"label,omitempty"`
	Owner      []string                      `protobuf:"bytes,5,rep,name=owner" json:"owner,omitempty"`
	Limit      uint32                        `protobuf:"varint,6,opt,name=limit" json:"limit,omitempty"`
	Offset     uint32                        `protobuf:"varint,7,opt,name=offset" json:"offset,omitempty"`
}

func (m *DescribeRuntimesRequest) Reset()                    { *m = DescribeRuntimesRequest{} }
func (m *DescribeRuntimesRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeRuntimesRequest) ProtoMessage()               {}
func (*DescribeRuntimesRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func (m *DescribeRuntimesRequest) GetRuntimeId() []string {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *DescribeRuntimesRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeRuntimesRequest) GetSearchWord() *google_protobuf2.StringValue {
	if m != nil {
		return m.SearchWord
	}
	return nil
}

func (m *DescribeRuntimesRequest) GetLabel() *google_protobuf2.StringValue {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *DescribeRuntimesRequest) GetOwner() []string {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *DescribeRuntimesRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeRuntimesRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type DescribeRuntimesResponse struct {
	TotalCount uint32     `protobuf:"varint,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	RuntimeSet []*Runtime `protobuf:"bytes,2,rep,name=runtime_set,json=runtimeSet" json:"runtime_set,omitempty"`
}

func (m *DescribeRuntimesResponse) Reset()                    { *m = DescribeRuntimesResponse{} }
func (m *DescribeRuntimesResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeRuntimesResponse) ProtoMessage()               {}
func (*DescribeRuntimesResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{5} }

func (m *DescribeRuntimesResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeRuntimesResponse) GetRuntimeSet() []*Runtime {
	if m != nil {
		return m.RuntimeSet
	}
	return nil
}

type ModifyRuntimeRequest struct {
	RuntimeId   *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId" json:"runtime_id,omitempty"`
	Name        *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Labels      *google_protobuf2.StringValue `protobuf:"bytes,4,opt,name=labels" json:"labels,omitempty"`
}

func (m *ModifyRuntimeRequest) Reset()                    { *m = ModifyRuntimeRequest{} }
func (m *ModifyRuntimeRequest) String() string            { return proto.CompactTextString(m) }
func (*ModifyRuntimeRequest) ProtoMessage()               {}
func (*ModifyRuntimeRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{6} }

func (m *ModifyRuntimeRequest) GetRuntimeId() *google_protobuf2.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *ModifyRuntimeRequest) GetName() *google_protobuf2.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ModifyRuntimeRequest) GetDescription() *google_protobuf2.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ModifyRuntimeRequest) GetLabels() *google_protobuf2.StringValue {
	if m != nil {
		return m.Labels
	}
	return nil
}

type ModifyRuntimeResponse struct {
	Runtime *Runtime `protobuf:"bytes,1,opt,name=runtime" json:"runtime,omitempty"`
}

func (m *ModifyRuntimeResponse) Reset()                    { *m = ModifyRuntimeResponse{} }
func (m *ModifyRuntimeResponse) String() string            { return proto.CompactTextString(m) }
func (*ModifyRuntimeResponse) ProtoMessage()               {}
func (*ModifyRuntimeResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{7} }

func (m *ModifyRuntimeResponse) GetRuntime() *Runtime {
	if m != nil {
		return m.Runtime
	}
	return nil
}

type DeleteRuntimeRequest struct {
	RuntimeId *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId" json:"runtime_id,omitempty"`
}

func (m *DeleteRuntimeRequest) Reset()                    { *m = DeleteRuntimeRequest{} }
func (m *DeleteRuntimeRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRuntimeRequest) ProtoMessage()               {}
func (*DeleteRuntimeRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{8} }

func (m *DeleteRuntimeRequest) GetRuntimeId() *google_protobuf2.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

type DeleteRuntimeResponse struct {
	Runtime *Runtime `protobuf:"bytes,1,opt,name=runtime" json:"runtime,omitempty"`
}

func (m *DeleteRuntimeResponse) Reset()                    { *m = DeleteRuntimeResponse{} }
func (m *DeleteRuntimeResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteRuntimeResponse) ProtoMessage()               {}
func (*DeleteRuntimeResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{9} }

func (m *DeleteRuntimeResponse) GetRuntime() *Runtime {
	if m != nil {
		return m.Runtime
	}
	return nil
}

type DescribeRuntimeProviderZonesRequest struct {
	Provider          *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=provider" json:"provider,omitempty"`
	RuntimeUrl        *google_protobuf2.StringValue `protobuf:"bytes,2,opt,name=runtime_url,json=runtimeUrl" json:"runtime_url,omitempty"`
	RuntimeCredential *google_protobuf2.StringValue `protobuf:"bytes,3,opt,name=runtime_credential,json=runtimeCredential" json:"runtime_credential,omitempty"`
}

func (m *DescribeRuntimeProviderZonesRequest) Reset()         { *m = DescribeRuntimeProviderZonesRequest{} }
func (m *DescribeRuntimeProviderZonesRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeRuntimeProviderZonesRequest) ProtoMessage()    {}
func (*DescribeRuntimeProviderZonesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{10}
}

func (m *DescribeRuntimeProviderZonesRequest) GetProvider() *google_protobuf2.StringValue {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *DescribeRuntimeProviderZonesRequest) GetRuntimeUrl() *google_protobuf2.StringValue {
	if m != nil {
		return m.RuntimeUrl
	}
	return nil
}

func (m *DescribeRuntimeProviderZonesRequest) GetRuntimeCredential() *google_protobuf2.StringValue {
	if m != nil {
		return m.RuntimeCredential
	}
	return nil
}

type DescribeRuntimeProviderZonesResponse struct {
	Provider *google_protobuf2.StringValue `protobuf:"bytes,1,opt,name=provider" json:"provider,omitempty"`
	Zone     []string                      `protobuf:"bytes,2,rep,name=zone" json:"zone,omitempty"`
}

func (m *DescribeRuntimeProviderZonesResponse) Reset()         { *m = DescribeRuntimeProviderZonesResponse{} }
func (m *DescribeRuntimeProviderZonesResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeRuntimeProviderZonesResponse) ProtoMessage()    {}
func (*DescribeRuntimeProviderZonesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor7, []int{11}
}

func (m *DescribeRuntimeProviderZonesResponse) GetProvider() *google_protobuf2.StringValue {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *DescribeRuntimeProviderZonesResponse) GetZone() []string {
	if m != nil {
		return m.Zone
	}
	return nil
}

func init() {
	proto.RegisterType((*RuntimeLabel)(nil), "openpitrix.RuntimeLabel")
	proto.RegisterType((*Runtime)(nil), "openpitrix.Runtime")
	proto.RegisterType((*CreateRuntimeRequest)(nil), "openpitrix.CreateRuntimeRequest")
	proto.RegisterType((*CreateRuntimeResponse)(nil), "openpitrix.CreateRuntimeResponse")
	proto.RegisterType((*DescribeRuntimesRequest)(nil), "openpitrix.DescribeRuntimesRequest")
	proto.RegisterType((*DescribeRuntimesResponse)(nil), "openpitrix.DescribeRuntimesResponse")
	proto.RegisterType((*ModifyRuntimeRequest)(nil), "openpitrix.ModifyRuntimeRequest")
	proto.RegisterType((*ModifyRuntimeResponse)(nil), "openpitrix.ModifyRuntimeResponse")
	proto.RegisterType((*DeleteRuntimeRequest)(nil), "openpitrix.DeleteRuntimeRequest")
	proto.RegisterType((*DeleteRuntimeResponse)(nil), "openpitrix.DeleteRuntimeResponse")
	proto.RegisterType((*DescribeRuntimeProviderZonesRequest)(nil), "openpitrix.DescribeRuntimeProviderZonesRequest")
	proto.RegisterType((*DescribeRuntimeProviderZonesResponse)(nil), "openpitrix.DescribeRuntimeProviderZonesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RuntimeManager service

type RuntimeManagerClient interface {
	CreateRuntime(ctx context.Context, in *CreateRuntimeRequest, opts ...grpc.CallOption) (*CreateRuntimeResponse, error)
	DescribeRuntimes(ctx context.Context, in *DescribeRuntimesRequest, opts ...grpc.CallOption) (*DescribeRuntimesResponse, error)
	ModifyRuntime(ctx context.Context, in *ModifyRuntimeRequest, opts ...grpc.CallOption) (*ModifyRuntimeResponse, error)
	DeleteRuntime(ctx context.Context, in *DeleteRuntimeRequest, opts ...grpc.CallOption) (*DeleteRuntimeResponse, error)
	DescribeRuntimeProviderZones(ctx context.Context, in *DescribeRuntimeProviderZonesRequest, opts ...grpc.CallOption) (*DescribeRuntimeProviderZonesResponse, error)
}

type runtimeManagerClient struct {
	cc *grpc.ClientConn
}

func NewRuntimeManagerClient(cc *grpc.ClientConn) RuntimeManagerClient {
	return &runtimeManagerClient{cc}
}

func (c *runtimeManagerClient) CreateRuntime(ctx context.Context, in *CreateRuntimeRequest, opts ...grpc.CallOption) (*CreateRuntimeResponse, error) {
	out := new(CreateRuntimeResponse)
	err := grpc.Invoke(ctx, "/openpitrix.RuntimeManager/CreateRuntime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeManagerClient) DescribeRuntimes(ctx context.Context, in *DescribeRuntimesRequest, opts ...grpc.CallOption) (*DescribeRuntimesResponse, error) {
	out := new(DescribeRuntimesResponse)
	err := grpc.Invoke(ctx, "/openpitrix.RuntimeManager/DescribeRuntimes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeManagerClient) ModifyRuntime(ctx context.Context, in *ModifyRuntimeRequest, opts ...grpc.CallOption) (*ModifyRuntimeResponse, error) {
	out := new(ModifyRuntimeResponse)
	err := grpc.Invoke(ctx, "/openpitrix.RuntimeManager/ModifyRuntime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeManagerClient) DeleteRuntime(ctx context.Context, in *DeleteRuntimeRequest, opts ...grpc.CallOption) (*DeleteRuntimeResponse, error) {
	out := new(DeleteRuntimeResponse)
	err := grpc.Invoke(ctx, "/openpitrix.RuntimeManager/DeleteRuntime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeManagerClient) DescribeRuntimeProviderZones(ctx context.Context, in *DescribeRuntimeProviderZonesRequest, opts ...grpc.CallOption) (*DescribeRuntimeProviderZonesResponse, error) {
	out := new(DescribeRuntimeProviderZonesResponse)
	err := grpc.Invoke(ctx, "/openpitrix.RuntimeManager/DescribeRuntimeProviderZones", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RuntimeManager service

type RuntimeManagerServer interface {
	CreateRuntime(context.Context, *CreateRuntimeRequest) (*CreateRuntimeResponse, error)
	DescribeRuntimes(context.Context, *DescribeRuntimesRequest) (*DescribeRuntimesResponse, error)
	ModifyRuntime(context.Context, *ModifyRuntimeRequest) (*ModifyRuntimeResponse, error)
	DeleteRuntime(context.Context, *DeleteRuntimeRequest) (*DeleteRuntimeResponse, error)
	DescribeRuntimeProviderZones(context.Context, *DescribeRuntimeProviderZonesRequest) (*DescribeRuntimeProviderZonesResponse, error)
}

func RegisterRuntimeManagerServer(s *grpc.Server, srv RuntimeManagerServer) {
	s.RegisterService(&_RuntimeManager_serviceDesc, srv)
}

func _RuntimeManager_CreateRuntime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRuntimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeManagerServer).CreateRuntime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeManager/CreateRuntime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeManagerServer).CreateRuntime(ctx, req.(*CreateRuntimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeManager_DescribeRuntimes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeRuntimesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeManagerServer).DescribeRuntimes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeManager/DescribeRuntimes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeManagerServer).DescribeRuntimes(ctx, req.(*DescribeRuntimesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeManager_ModifyRuntime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyRuntimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeManagerServer).ModifyRuntime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeManager/ModifyRuntime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeManagerServer).ModifyRuntime(ctx, req.(*ModifyRuntimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeManager_DeleteRuntime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRuntimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeManagerServer).DeleteRuntime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeManager/DeleteRuntime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeManagerServer).DeleteRuntime(ctx, req.(*DeleteRuntimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeManager_DescribeRuntimeProviderZones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeRuntimeProviderZonesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeManagerServer).DescribeRuntimeProviderZones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeManager/DescribeRuntimeProviderZones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeManagerServer).DescribeRuntimeProviderZones(ctx, req.(*DescribeRuntimeProviderZonesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RuntimeManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpitrix.RuntimeManager",
	HandlerType: (*RuntimeManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRuntime",
			Handler:    _RuntimeManager_CreateRuntime_Handler,
		},
		{
			MethodName: "DescribeRuntimes",
			Handler:    _RuntimeManager_DescribeRuntimes_Handler,
		},
		{
			MethodName: "ModifyRuntime",
			Handler:    _RuntimeManager_ModifyRuntime_Handler,
		},
		{
			MethodName: "DeleteRuntime",
			Handler:    _RuntimeManager_DeleteRuntime_Handler,
		},
		{
			MethodName: "DescribeRuntimeProviderZones",
			Handler:    _RuntimeManager_DescribeRuntimeProviderZones_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "runtime.proto",
}

func init() { proto.RegisterFile("runtime.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 941 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x55, 0xcf, 0x6f, 0xe3, 0x44,
	0x14, 0x96, 0x9d, 0xa6, 0x3f, 0x9e, 0x9b, 0xaa, 0x3b, 0x04, 0xb0, 0xa2, 0x42, 0xb3, 0xde, 0x3d,
	0x94, 0x8a, 0xc6, 0x25, 0xf4, 0x00, 0xac, 0x76, 0xa5, 0xd2, 0xd5, 0x4a, 0xab, 0x65, 0x25, 0xe4,
	0xf2, 0x43, 0xda, 0x4b, 0x34, 0x89, 0x27, 0xc1, 0xc2, 0xf1, 0x78, 0xc7, 0x93, 0x86, 0x72, 0x42,
	0x5c, 0xe0, 0x5c, 0xfe, 0x17, 0xee, 0x5c, 0x38, 0x70, 0xe5, 0x5f, 0xe0, 0x80, 0xc4, 0x9f, 0xc0,
	0x05, 0xcd, 0x0f, 0x27, 0xb6, 0x63, 0xb2, 0x4e, 0x7a, 0x42, 0xe2, 0xd4, 0x66, 0xe6, 0x7b, 0x6f,
	0xbe, 0xf7, 0xbd, 0xef, 0x3d, 0x43, 0x83, 0x4d, 0x22, 0x1e, 0x8c, 0x49, 0x27, 0x66, 0x94, 0x53,
	0x04, 0x34, 0x26, 0x51, 0x1c, 0x70, 0x16, 0x7c, 0xd3, 0x7a, 0x7b, 0x44, 0xe9, 0x28, 0x24, 0xae,
	0xbc, 0xe9, 0x4f, 0x86, 0xee, 0x94, 0xe1, 0x38, 0x26, 0x2c, 0x51, 0xd8, 0xd6, 0x61, 0xf1, 0x5e,
	0xe4, 0x49, 0x38, 0x1e, 0xc7, 0x1a, 0x70, 0xa0, 0x01, 0x38, 0x0e, 0x5c, 0x1c, 0x45, 0x94, 0x63,
	0x1e, 0xd0, 0x28, 0x0d, 0x7f, 0x57, 0xfe, 0x19, 0x9c, 0x8c, 0x48, 0x74, 0x92, 0x4c, 0xf1, 0x68,
	0x44, 0x98, 0x4b, 0x63, 0x89, 0x58, 0x44, 0x3b, 0xbf, 0x99, 0xb0, 0xeb, 0x29, 0xaa, 0x9f, 0xe0,
	0x3e, 0x09, 0xd1, 0x13, 0xd8, 0xd7, 0xd4, 0x7b, 0xa1, 0x38, 0xe8, 0x05, 0xbe, 0x6d, 0xb4, 0x8d,
	0x23, 0xab, 0x7b, 0xd0, 0x51, 0xef, 0x76, 0x52, 0x62, 0x9d, 0x4b, 0xce, 0x82, 0x68, 0xf4, 0x05,
	0x0e, 0x27, 0xc4, 0xdb, 0x63, 0x99, 0x2c, 0x4f, 0x7d, 0xf4, 0x00, 0x20, 0xcd, 0x13, 0xf8, 0xb6,
	0x59, 0x21, 0xc3, 0x8e, 0xc6, 0x3f, 0xf5, 0xd1, 0x87, 0xb0, 0xa3, 0x1e, 0xff, 0x9a, 0x5c, 0xdb,
	0xb5, 0x0a, 0xb1, 0xdb, 0x12, 0xfe, 0x8c, 0x5c, 0xa3, 0x87, 0x60, 0xa9, 0xd0, 0x2b, 0x71, 0x61,
	0x6f, 0x54, 0x08, 0x06, 0x19, 0x20, 0xff, 0x47, 0x0f, 0xc0, 0x1a, 0x30, 0x82, 0x39, 0xe9, 0x09,
	0x2a, 0x76, 0x5d, 0x86, 0xb7, 0x16, 0xc2, 0x3f, 0x4b, 0x5b, 0xe2, 0x81, 0x82, 0x8b, 0x03, 0xe7,
	0xd7, 0x3a, 0x6c, 0x69, 0x31, 0x0b, 0xf5, 0x1b, 0xab, 0xd5, 0x7f, 0x0a, 0x1b, 0x11, 0x1e, 0x93,
	0x4a, 0xb2, 0x49, 0x24, 0x7a, 0x04, 0x96, 0x4f, 0x92, 0x01, 0x0b, 0x64, 0xa7, 0x2b, 0x69, 0x96,
	0x0d, 0x40, 0x1f, 0xc0, 0x76, 0xcc, 0xe8, 0x55, 0xe0, 0x13, 0x56, 0x49, 0xb3, 0x19, 0x5a, 0x08,
	0x9e, 0x16, 0x3a, 0x61, 0xa1, 0x56, 0xec, 0x15, 0x82, 0xeb, 0x80, 0xcf, 0x59, 0x28, 0x4a, 0xfd,
	0x96, 0x46, 0xc4, 0xde, 0xac, 0x52, 0xaa, 0x40, 0xa2, 0x67, 0x80, 0xd2, 0x07, 0x07, 0x8c, 0xf8,
	0x24, 0xe2, 0x01, 0x0e, 0xed, 0xad, 0x0a, 0xf1, 0x77, 0x74, 0xdc, 0xc5, 0x2c, 0x0c, 0x9d, 0xc2,
	0xa6, 0xec, 0x7e, 0x62, 0x6f, 0xb7, 0x6b, 0x47, 0x56, 0xd7, 0xee, 0xcc, 0x27, 0xb5, 0x93, 0x1d,
	0x0c, 0x4f, 0xe3, 0x50, 0x17, 0xea, 0x74, 0x1a, 0x11, 0x66, 0xef, 0x54, 0x78, 0x51, 0x41, 0xd1,
	0x19, 0x6c, 0x26, 0x1c, 0xf3, 0x49, 0x62, 0x43, 0x85, 0x20, 0x8d, 0x2d, 0x7a, 0xd1, 0x5a, 0xc5,
	0x8b, 0x22, 0x58, 0xa5, 0x51, 0xc1, 0xbb, 0xaf, 0x0e, 0x56, 0x70, 0x69, 0xe4, 0x9f, 0x6b, 0xd0,
	0xbc, 0x90, 0xb9, 0xb4, 0x04, 0x1e, 0x79, 0x39, 0x21, 0x09, 0x9f, 0x19, 0xd3, 0x58, 0xd7, 0x98,
	0xe6, 0xff, 0xc6, 0xac, 0x66, 0xcc, 0xb3, 0x8c, 0x31, 0x2b, 0x58, 0x46, 0x61, 0x9d, 0x27, 0xf0,
	0x7a, 0xa1, 0x6f, 0x49, 0x4c, 0xa3, 0x84, 0xa0, 0x13, 0xd8, 0xd2, 0x6f, 0xe8, 0xde, 0xbd, 0x56,
	0x62, 0x74, 0x2f, 0xc5, 0x38, 0x3f, 0x98, 0xf0, 0xe6, 0x63, 0xd9, 0x85, 0x7e, 0x9a, 0x2a, 0x49,
	0x3d, 0xf0, 0x56, 0x61, 0xb3, 0xd5, 0x8e, 0x76, 0xb2, 0xbb, 0xeb, 0x8d, 0x99, 0xd7, 0x4d, 0x79,
	0x95, 0xba, 0xf9, 0x21, 0x58, 0x09, 0xc1, 0x6c, 0xf0, 0x55, 0x6f, 0x4a, 0x99, 0x5f, 0x69, 0x43,
	0x81, 0x0a, 0xf8, 0x92, 0x32, 0x5f, 0x8c, 0x9d, 0xac, 0xb1, 0x92, 0x09, 0x14, 0x14, 0x35, 0xd3,
	0x51, 0xad, 0x4b, 0x26, 0x7a, 0x18, 0x9b, 0x50, 0x0f, 0x83, 0x71, 0xc0, 0x65, 0x67, 0x1b, 0x9e,
	0xfa, 0x21, 0x68, 0xd3, 0xe1, 0x30, 0x21, 0x5c, 0x36, 0xac, 0xe1, 0xe9, 0x5f, 0xce, 0x4b, 0xb0,
	0x17, 0x85, 0xd0, 0xa2, 0x1e, 0x82, 0xc5, 0x29, 0xc7, 0x61, 0x6f, 0x40, 0x27, 0x11, 0x97, 0xc2,
	0x36, 0x3c, 0x90, 0x47, 0x17, 0xe2, 0x04, 0x9d, 0xcd, 0x2d, 0x28, 0x32, 0x9b, 0x72, 0xc5, 0x94,
	0x2a, 0x9f, 0x4a, 0x7a, 0x49, 0xb8, 0xf3, 0xb7, 0x01, 0xcd, 0xe7, 0xd4, 0x0f, 0x86, 0xd7, 0x85,
	0xe9, 0xfb, 0x8f, 0x7d, 0x53, 0xe6, 0x16, 0xde, 0x58, 0xcd, 0xc2, 0x85, 0xe2, 0xd7, 0xb3, 0xf0,
	0x25, 0x34, 0x1f, 0x93, 0x90, 0x2c, 0xac, 0xb0, 0xdb, 0x88, 0x28, 0xc8, 0x15, 0x92, 0xae, 0x47,
	0xee, 0x2f, 0x03, 0xee, 0x15, 0x6c, 0xf5, 0xa9, 0xde, 0x5b, 0x2f, 0x68, 0x34, 0x9f, 0xb5, 0xec,
	0xf6, 0x33, 0x6e, 0xb3, 0xfd, 0xcc, 0x15, 0xb7, 0x5f, 0xf9, 0x2e, 0xab, 0xad, 0xb5, 0xcb, 0x1c,
	0x0e, 0xf7, 0x97, 0x17, 0xab, 0x45, 0x5c, 0xbf, 0x5a, 0xa4, 0x97, 0xb5, 0x5a, 0x39, 0xf2, 0xff,
	0xee, 0x9f, 0x75, 0xd8, 0xd3, 0xcf, 0x3d, 0xc7, 0x11, 0x1e, 0x11, 0x86, 0xbe, 0x33, 0xa0, 0x91,
	0xdb, 0x8f, 0xa8, 0x9d, 0x6d, 0x53, 0xd9, 0x27, 0xaf, 0x75, 0x77, 0x09, 0x42, 0xf1, 0x76, 0x8e,
	0x6f, 0xce, 0xf7, 0xd1, 0x9e, 0xfa, 0xf8, 0xb6, 0x75, 0xf9, 0xdf, 0xff, 0xfe, 0xc7, 0x4f, 0xe6,
	0x1d, 0x67, 0xd7, 0xbd, 0x7a, 0xcf, 0xd5, 0x47, 0xc9, 0x47, 0xc6, 0x31, 0xfa, 0xd1, 0x80, 0xfd,
	0xe2, 0x42, 0x41, 0xf7, 0xb2, 0x6f, 0xfc, 0xcb, 0xde, 0x6d, 0xdd, 0x5f, 0x0e, 0xd2, 0x5c, 0xde,
	0xb9, 0x39, 0x47, 0x68, 0xdf, 0xd7, 0xd7, 0x39, 0x36, 0x7b, 0x28, 0xc7, 0x46, 0xaa, 0x91, 0x1b,
	0xb5, 0xbc, 0x1a, 0x65, 0x2b, 0x28, 0xaf, 0x46, 0xe9, 0x9c, 0x6a, 0x35, 0xc6, 0xf2, 0x2e, 0xaf,
	0x46, 0x77, 0x41, 0x0d, 0x41, 0x21, 0x37, 0x50, 0x79, 0x0a, 0x65, 0x03, 0x9c, 0xa7, 0x50, 0x3a,
	0x8d, 0x9a, 0x82, 0x2f, 0xef, 0xf2, 0x14, 0x8e, 0x17, 0x28, 0xfc, 0x62, 0xc0, 0xc1, 0x32, 0x77,
	0x22, 0x77, 0x89, 0xee, 0x65, 0x43, 0xdb, 0x3a, 0xad, 0x1e, 0xa0, 0xf9, 0x3e, 0xba, 0x39, 0xbf,
	0x8b, 0x0e, 0x8b, 0x4d, 0x6b, 0xa7, 0xf6, 0x6e, 0x0b, 0x3f, 0x27, 0xb2, 0x80, 0x26, 0x42, 0xd9,
	0x02, 0x5c, 0x79, 0xf3, 0xf1, 0xc6, 0x0b, 0x33, 0xee, 0xf7, 0x37, 0xe5, 0x90, 0xbc, 0xff, 0x4f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x1f, 0xe4, 0xe9, 0x7c, 0x0e, 0x00, 0x00,
}
